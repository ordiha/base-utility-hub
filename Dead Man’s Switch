// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract DeadMansSwitch {
    address public owner;
    uint256 public lastPing;
    uint256 public timeout;
    address public beneficiary;

    constructor(address _beneficiary, uint256 _timeout) {
        owner = msg.sender;
        beneficiary = _beneficiary;
        timeout = _timeout;
        lastPing = block.timestamp;
    }

    function ping() external {
        require(msg.sender == owner, "Not owner");
        lastPing = block.timestamp;
    }

    function claim() external {
        require(block.timestamp >= lastPing + timeout, "Owner still alive");
        payable(beneficiary).transfer(address(this).balance);
    }

    receive() external payable {}
}
