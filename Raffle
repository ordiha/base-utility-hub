// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract Raffle {
    address public manager;
    address[] public players;
    address public lastWinner;

    constructor() {
        manager = msg.sender;
    }

    function enter() external payable {
        require(msg.value > 0, "Need ETH to enter");
        players.push(msg.sender);
    }

    function pickWinner() external {
        require(msg.sender == manager, "Only manager");
        require(players.length > 0, "No players");
        uint256 idx = uint256(
            keccak256(abi.encodePacked(block.prevrandao, block.timestamp, players))
        ) % players.length;
        lastWinner = players[idx];
        payable(lastWinner).transfer(address(this).balance);
        delete players;
    }

    function getPlayers() external view returns (address[] memory) {
        return players;
    }
}
